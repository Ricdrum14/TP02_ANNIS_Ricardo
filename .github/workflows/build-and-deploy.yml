name: Build and publish

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: Ricdrum14/cnamApp

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    concurrency:
      cancel-in-progress: true
      group: ${{ github.workflow }}-${{ github.ref }}

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy and commit to cnamApp
        run: |
          # Vérifier si le répertoire cnamApp existe, sinon cloner
          if [ ! -d "cnamApp" ]; then
            git clone https://github.com/Ricdrum14/cnamApp.git
          fi

          # Copier le build dans le répertoire cnamApp/deployApp/
          cp -r dist/tp2/* CNAM_app/cnamApp/deployApp/
          cd cnamApp
          git config --global user.name "Ricdrum14"
          git config --global user.email "ricardoannis9@gmail.com"
          git add .
          git commit -m "Déploiement automatique depuis TP02_ANNIS_Ricardo"
          git push

      - name: Deploy on render.com
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER }}
        run: |
          curl "$deploy_url"
